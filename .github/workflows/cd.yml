# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: ssh-scp-ssh-pipelines
        # You may pin to the exact commit or the version.
        # uses: cross-the-world/ssh-scp-ssh-pipelines@e1c2bf0c8d7813a3243dc649b6af178262a834e9
        uses: cross-the-world/ssh-scp-ssh-pipelines@v1.1.2
        env:
          DEPLOY_STARTS: "Starting the deployment"
          DEPLOY_ENDS: "Deployement is now complete"
          LIVE_FOLDER: "/home/${{ secrets.SSH_REMOTE_USER }}/${{ secrets.SSH_REMOTE_HOST }}"
          STAGING_FOLDER: "/home/${{ secrets.SSH_REMOTE_USER }}/staging.${{ secrets.SSH_REMOTE_HOST }}"
          TEMP_FOLDER: "/home/${{ secrets.SSH_REMOTE_USER }}/TEMP"
        with:
          # ssh remote host
          host: ${{ secrets.SSH_REMOTE_HOST }}
          # ssh remote port
          port: ${{ secrets.SSH_REMOTE_PORT }} # optional, default is 22
          # ssh remote user
          user: ${{ secrets.SSH_REMOTE_USER }}
          # content of ssh private key. ex raw content of ~/.ssh/id_rsa
          key: ${{ secrets.SSH_REMOTE_KEY }} # optional
          # ssh remote password
          pass: ${{ secrets.SSH_REMOTE_PASS }} # optional
          # connection timeout to remote host
          connect_timeout: 20s # optional, default is 30s
          # execute pre-commands before scp
          first_ssh: | # optional
            echo $DEPLOY_STARTS
            mkdir -p $STAGING_FOLDER
            rm -rdf $TEMP_FOLDER
          # scp from local to remote
          scp: | # optional
            './src/*' => $STAGING_FOLDER
          # execute post-commands after scp
          last_ssh: | # optional
            mv -f $LIVE_FOLDER $TEMP_FOLDER
            mv -f $STAGING_FOLDER $LIVE_FOLDER
            mv -f $TEMP_FOLDER $STAGING_FOLDER
            rm -rdf $TEMP_FOLDER
            echo $DEPLOY_ENDS