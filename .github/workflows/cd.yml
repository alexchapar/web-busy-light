name: CD

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
    paths-ignore:
    - '**/FUNDING.yml'
    - '.vscode/**'
    - 'docs/**'
    - 'LICENSE'
    - 'README.md'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  FOLDER: "/home/${{ secrets.SSH_REMOTE_USER }}/${{ secrets.HOST_NAME }}"
  TEMP_FOLDER: "/home/${{ secrets.SSH_REMOTE_USER }}/TEMP"
  STAGING_FOLDER: "/home/${{ secrets.SSH_REMOTE_USER }}/staging.${{ secrets.HOST_NAME }}"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  stage-tests:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    name: Staging and testing

    environment: staging

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: ssh-scp-ssh-pipelines
        # You may pin to the exact commit or the version.
        # uses: cross-the-world/ssh-scp-ssh-pipelines@e1c2bf0c8d7813a3243dc649b6af178262a834e9
        uses: cross-the-world/ssh-scp-ssh-pipelines@v1.1.2
        # env:
        with:
          # ssh remote host
          host: ${{ secrets.SSH_REMOTE_HOST }}
          # ssh remote port
          port: ${{ secrets.SSH_REMOTE_PORT }} # optional, default is 22
          # ssh remote user
          user: ${{ secrets.SSH_REMOTE_USER }}
          # content of ssh private key. ex raw content of ~/.ssh/id_rsa
          # key: ${{ secrets.SSH_REMOTE_KEY }} # optional
          # ssh remote password
          pass: ${{ secrets.SSH_REMOTE_PASS }} # optional
          # connection timeout to remote host
          connect_timeout: 20s # optional, default is 30s
          # execute pre-commands before scp
          first_ssh: | # optional
            mkdir -p $FOLDER
          # scp from local to remote
          scp: | # optional
            './src/*' => $FOLDER
          # execute post-commands after scp
          # last_ssh: | # optional

      - name: Testim CLI
        run: |
            npm add @testim/testim-cli
            ./node_modules/.bin/testim --token ${{ secrets.TESTIMIO_TOKEN }} --project ${{ secrets.TESTIMIO_PROJECT }} --grid ${{ secrets.TESTIMIO_GRIDNAME }} --report-file testim-report.xml --base-url ${{ secrets.TESTIMIO_BASEURL }}

      - name: Publish Test Results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v1.7
        with:
          check_name: Test Results - Staging
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: testim-report.xml

  deploy:
    name: Production
    needs: stage-tests
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    environment: production

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: ssh-scp-ssh-pipelines
        # You may pin to the exact commit or the version.
        # uses: cross-the-world/ssh-scp-ssh-pipelines@e1c2bf0c8d7813a3243dc649b6af178262a834e9
        uses: cross-the-world/ssh-scp-ssh-pipelines@v1.1.2
        with:
          # ssh remote host
          host: ${{ secrets.SSH_REMOTE_HOST }}
          # ssh remote port
          port: ${{ secrets.SSH_REMOTE_PORT }} # optional, default is 22
          # ssh remote user
          user: ${{ secrets.SSH_REMOTE_USER }}
          # content of ssh private key. ex raw content of ~/.ssh/id_rsa
          # key: ${{ secrets.SSH_REMOTE_KEY }} # optional
          # ssh remote password
          pass: ${{ secrets.SSH_REMOTE_PASS }} # optional
          # connection timeout to remote host
          connect_timeout: 20s # optional, default is 30s
          # execute pre-commands before scp
          first_ssh: | # optional
            rm -rdf $TEMP_FOLDER
          # scp from local to remote
          # scp: | # optional
          # execute post-commands after scp
          last_ssh: | # optional
            mv -f $FOLDER $TEMP_FOLDER
            mv -f $STAGING_FOLDER $FOLDER
            mv -f $TEMP_FOLDER $STAGING_FOLDER
            rm -rdf $TEMP_FOLDER

      - name: Testim CLI
        run: |
            npm add @testim/testim-cli
            ./node_modules/.bin/testim --token ${{ secrets.TESTIMIO_TOKEN }} --project ${{ secrets.TESTIMIO_PROJECT }} --grid ${{ secrets.TESTIMIO_GRIDNAME }} --report-file testim-report.xml --base-url ${{ secrets.TESTIMIO_BASEURL }}

      - name: Publish Test Results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v1.7
        with:
          check_name: Test Results - Production
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: testim-report.xml